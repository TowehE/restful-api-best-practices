# Posts Management API

A secure, RESTful API for managing blog posts with user authentication. Built using **Node.js**, **TypeScript**, **Prisma**, and **PostgreSQL**. The project follows industry best practices including validation, structured error handling, and OpenAPI documentation.

---

## Features

* User Authentication: JWT-based authentication system
* Posts Management: Create, Read, Update, and Delete (CRUD) operations for posts
* RESTful Design: Clean endpoint structure using appropriate HTTP methods
* Type Safety: Fully implemented with TypeScript
* Database: PostgreSQL with Prisma ORM
* Documentation: Auto-generated API docs using Swagger/OpenAPI
* Error Handling: Centralized and descriptive error responses
* Input Validation: Request validation with meaningful status codes

---

## Getting Started

### Option 1: Local Setup

1. Clone the repository:

   ```bash
   git clone https://github.com/your-username/posts-api-assessment.git
   cd posts-api-assessment
   ```

2. Install dependencies:

   ```bash
   npm install
   ```

3. Configure environment variables:

   Update `.env` with your local PostgreSQL connection details.

4. Run Prisma migrations and start the development server:

   ```bash
   npx prisma migrate dev --name init
   npm run dev
   ```

The API will be available at:
`http://localhost:3000/api/v1`

---

## API Documentation

View the full Swagger/OpenAPI documentation at:
`http://localhost:3000/api-docs`

This includes all endpoints, request/response models, authentication setup, and error formats.

---

## Testing the API

You can test all endpoints using the Postman collection below:

**Postman Documentation**
[https://documenter.getpostman.com/view/31029158/2sB2xFenGp](https://documenter.getpostman.com/view/31029158/2sB2xFenGp)

It includes:

* Authentication: register, login, profile
* Post operations: create, read, get, update, delete
